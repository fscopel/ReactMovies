/* tslint:disable */
/* eslint-disable */
/**
 * ReactMoviesAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { NewReleaseMovies, TopRatedResult } from "../models/index";
import {
  NewReleaseMoviesFromJSON,
  NewReleaseMoviesToJSON,
  TopRatedResultFromJSON,
  TopRatedResultToJSON,
} from "../models/index";

export interface ApiMovieNewreleasesGetRequest {
  page?: number;
}

export interface ApiMovieNowplayingGetRequest {
  page?: number;
}

export interface ApiMovieTopratedGetRequest {
  page?: number;
}

/**
 *
 */
export class MovieApi extends runtime.BaseAPI {
  /**
   */
  async apiMovieNewreleasesGetRaw(
    requestParameters: ApiMovieNewreleasesGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<NewReleaseMovies>> {
    const queryParameters: any = {};

    if (requestParameters.page !== undefined) {
      queryParameters["page"] = requestParameters.page;
    }

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/api/movie/newreleases`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      NewReleaseMoviesFromJSON(jsonValue),
    );
  }

  /**
   */
  async apiMovieNewreleasesGet(
    requestParameters: ApiMovieNewreleasesGetRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<NewReleaseMovies> {
    const response = await this.apiMovieNewreleasesGetRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   */
  async apiMovieNowplayingGetRaw(
    requestParameters: ApiMovieNowplayingGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<string>> {
    const queryParameters: any = {};

    if (requestParameters.page !== undefined) {
      queryParameters["page"] = requestParameters.page;
    }

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/api/movie/nowplaying`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    if (this.isJsonMime(response.headers.get("content-type"))) {
      return new runtime.JSONApiResponse<string>(response);
    } else {
      return new runtime.TextApiResponse(response) as any;
    }
  }

  /**
   */
  async apiMovieNowplayingGet(
    requestParameters: ApiMovieNowplayingGetRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<string> {
    const response = await this.apiMovieNowplayingGetRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }

  /**
   */
  async apiMovieTopratedGetRaw(
    requestParameters: ApiMovieTopratedGetRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<TopRatedResult>> {
    const queryParameters: any = {};

    if (requestParameters.page !== undefined) {
      queryParameters["page"] = requestParameters.page;
    }

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/api/movie/toprated`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      TopRatedResultFromJSON(jsonValue),
    );
  }

  /**
   */
  async apiMovieTopratedGet(
    requestParameters: ApiMovieTopratedGetRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<TopRatedResult> {
    const response = await this.apiMovieTopratedGetRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }
}
